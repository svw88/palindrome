{"version":3,"sources":["webpack:///C:/Users/Stephan/Desktop/palindrome/palindrome/src async","webpack:///C:/Users/Stephan/Desktop/palindrome/palindrome/src/app/app.component.ts","webpack:///C:/Users/Stephan/Desktop/palindrome/palindrome/src/app/app.module.ts","webpack:///C:/Users/Stephan/Desktop/palindrome/palindrome/src/assets/components/form-container.component.ts","webpack:///C:/Users/Stephan/Desktop/palindrome/palindrome/src/assets/services/helper.service.ts","webpack:///C:/Users/Stephan/Desktop/palindrome/palindrome/src/environments/environment.ts","webpack:///C:/Users/Stephan/Desktop/palindrome/palindrome/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Stephan/Desktop/palindrome/palindrome/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <form-container></form-container>\n  `\n})\nexport class AppComponent {\n  title = 'Palindrome App';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Stephan/Desktop/palindrome/palindrome/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { FormContainerComponent } from '../assets/components/form-container.component';\nimport { HelperService } from '../assets/services/helper.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormContainerComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [HelperService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Stephan/Desktop/palindrome/palindrome/src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { HelperService } from '../services/helper.service'\r\n\r\n@Component({\r\n    selector: 'form-container',\r\n    template: `\r\n        <div class=\"landing-container\">\r\n            <div align=\"center\">\r\n              <h2>Palindrome Detector</h2>\r\n            </div>\r\n            <br>\r\n            <br>\r\n            <form [formGroup]=\"palindromeForm\" (ngSubmit)=\"checkPalindrome()\">\r\n                <div class=\"form-group\">\r\n                    <input \r\n                        formControlName=\"input\" \r\n                        id=\"input\" \r\n                        type=\"text\" \r\n                        class=\"form-control\" \r\n                        placeholder=\"Enter phrase to check\"\r\n                        required>\r\n                    <br>\r\n                    <br>    \r\n                    <div *ngIf=\"result!='' && palindromeForm.controls.input.valid\" align=\"center\">    \r\n                        <h4>{{result}}</h4>\r\n                    </div>  \r\n                    <br>\r\n                    <br>  \r\n                    <div align=\"center\">    \r\n                        <button [disabled]=\"!palindromeForm.controls.input.valid\" type=\"submit\" class=\"btn btn-default\">\r\n                            Check\r\n                        </button>\r\n                    </div>  \r\n                </div>\r\n            </form>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class FormContainerComponent implements OnInit {\r\n\r\n    result = '';\r\n\r\n    palindromeForm: FormGroup;\r\n\r\n    constructor(private helperService: HelperService) {\r\n        this.palindromeForm = new FormGroup({\r\n            input: new FormControl()\r\n        });\r\n    };\r\n\r\n    ngOnInit() { }\r\n\r\n    checkPalindrome() {\r\n\r\n        if (this.helperService.checkPalindrome(this.palindromeForm.controls.input.value)) {\r\n            this.result = 'This is a palindrome'\r\n        } else {\r\n            this.result = 'This is not a palindrome'\r\n        };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Stephan/Desktop/palindrome/palindrome/src/assets/components/form-container.component.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class HelperService {\r\n\r\n    constructor() { }\r\n\r\n    checkPalindrome(input) {\r\n        input = input.toLowerCase().replace(/\\s/gi,'').replace(/[^\\w\\s]/gi, '');\r\n        var reverse = input.split(\"\").reverse().join(\"\");\r\n        if (reverse == input) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Stephan/Desktop/palindrome/palindrome/src/assets/services/helper.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Stephan/Desktop/palindrome/palindrome/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Stephan/Desktop/palindrome/palindrome/src/main.ts"],"sourceRoot":""}